@page
@model LoginModel
@using Manero.Models

@await Html.PartialAsync("_AccountHeader", new AccountHeaderViewModel
    {
    Title = "Sign in",
    BackButtonLink = string.IsNullOrEmpty(Request.Headers["Referer"].ToString()) ? "/DefaultFallbackURL" : Request.Headers["Referer"].ToString()    
    })
<div class="d-grid" style="margin-top: 5rem; padding: 0 2rem;">
    <div class="d-grid justify-content-center align-items-center">
        <h1 class="big-title">Welcome Back!</h1>
        <p style="text-align: center">Sign in to continue</p>
    </div>
    <section class="mt-5">
        <form id="account" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="mb-3 input-holder">
                <input id="email-input" asp-for="Input.Email" autocomplete="username" aria-required="true" />
                <label asp-for="Input.Email">Email</label>
                <i class="fa-regular fa-check" style="display: none"></i>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="mb-3 input-holder">
                <input asp-for="Input.Password" id="login-pw" autocomplete="current-password" aria-required="true" />
                <label asp-for="Input.Password">Password</label>
                <i id="password-toggle-icon" onclick="togglePasswordVisibility()" class="fa-regular fa-eye-slash"></i>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="d-flex justify-content-between">
                <div class="grey-checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="custom-checkbox">
                        <input type="checkbox" asp-for="Input.RememberMe" />
                        <span class="checkmark"></span> Remember me
                    </label>
                </div>
                <p>
                    <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                </p>
            </div>

            <div>
                <button id="login-submit" type="submit" class="w-100 my-btn">Log in</button>
            </div>
            <div>
                <p class="mt-2">
                    <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Don't have an account? Sign up.</a>
                </p>
            </div>
        </form>
    </section>
    <section>
        <h3>Use another service to log in.</h3>
        <hr />
        @{
            if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                            article
                            about setting up this ASP.NET application to support logging in via external services
                        </a>.
                    </p>
                </div>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in Model.ExternalLogins!)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                            }
                        </p>
                    </div>
                </form>
            }
        }
    </section>
</div>




@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePasswordVisibility() {
            var passwordInput = document.getElementById('login-pw');
            var eyeIcon = document.getElementById('password-toggle-icon');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.classList.remove('fa-eye-slash');
                eyeIcon.classList.add('fa-eye');
            } else {
                passwordInput.type = 'password';
                eyeIcon.classList.remove('fa-eye');
                eyeIcon.classList.add('fa-eye-slash');
            }
        }
    </script>
    <script>
    const emailInput = document.getElementById('email-input');
    const checkIcon = document.querySelector('.fa-check');

    emailInput.addEventListener('input', function () {
        const email = emailInput.value;
        const isValid = validateEmail(email);

        if (isValid) {
            checkIcon.style.display = 'inline-block';
        } else {
            checkIcon.style.display = 'none';
        }
    });

    function validateEmail(email) {
        // Use a regular expression for email validation
        const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
        return emailRegex.test(email);
    }
</script>
}
