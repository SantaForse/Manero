@page
@model Manero.Areas.Identity.Pages.Account.PhoneVerifyConfirmationModel
@{
}

@using Manero.Models

@await Html.PartialAsync("_AccountHeader", new AccountHeaderViewModel
    {
    Title = "Verify your phone number",
    BackButtonLink = string.IsNullOrEmpty(Request.Headers["Referer"].ToString()) ? "/DefaultFallbackURL" : Request.Headers["Referer"].ToString()
    })
<div class="d-grid" style="width: 90%; padding: 0 2rem; margin: auto; margin-top: 5rem">
    <section class="mt-3">
        <p>Enter your OTP code here.</p>
        <form id="account" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="mb-3 otp-container">
                <input class="otp-digit" type="text" maxlength="1" />
                <input class="otp-digit" type="text" maxlength="1" />
                <input class="otp-digit" type="text" maxlength="1" />
                <input class="otp-digit" type="text" maxlength="1" />
                <input class="otp-digit" type="text" maxlength="1" />
            </div>
            <span asp-validation-for="Input.OTPCode" class="text-danger"></span>
            <p></p>
            <input type="text" asp-for="Input.OTPCode" id="fullOtpCode" name="fullOtpCode" style="display: none;"/>
            <p>Didn't recieve the OPT? <a href="#">Resend.</a></p>
            <button type="submit" class="w-100 my-btn">VERIFY</button>
        </form>
    </section>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById('account').addEventListener('submit', function (e) {
            const otpInputs = document.querySelectorAll('.otp-digit');
            let otpCode = '';

            otpInputs.forEach(input => {
                otpCode += input.value;
            });

            document.getElementById('fullOtpCode').value = otpCode
        });

        document.querySelectorAll('.otp-digit').forEach((input, index, array) => {
            input.addEventListener('input', () => {
                if (input.value.length === 1) {
                    if (index < array.length - 1) {
                        array[index + 1].focus();
                    }
                }
            });
            input.addEventListener('keydown', (e) => {
                if (e.key === "Backspace" && index > 0 && !input.value) {
                    array[index - 1].focus();
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var otpDigits = document.querySelectorAll('.otp-digit');

            otpDigits.forEach(function (digit) {
                digit.addEventListener('input', function () {
                    if (this.value) {
                        this.classList.add('otp-digit-filled');
                    } else {
                        this.classList.remove('otp-digit-filled');
                    }
                });
            });
        });
    </script>
}