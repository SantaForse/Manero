



<section class="top-navbar container">
    <a href="" class="less-symbol" style="color: #111111;"><i class="fa-solid fa-angle-left"></i></a>

    <h3>Filter</h3>
    <div class="shopping-bag-with-ball">
        <div class="orange-ball"><p>$0</p></div>
        <a href="" class="big-screen-symbols"><i class="fa-light fa-house-chimney"></i></a>
        <a href="" class="big-screen-symbols"><i class="fa-light fa-magnifying-glass"></i></a>
        <a href="" class="big-screen-symbols"><i class="fa-light fa-heart"></i></a>
        <a href="" class="big-screen-symbols"><i class="fa-light fa-circle-user"></i></a>
        <a href="" class="shopping-bag-symbol" style="color: #626262;"><i class="fa-light fa-bag-shopping"></i></a>
    </div>
</section>

<section class="filter-section container">
    <div class="product-size">
        <h3>Size</h3>
        <div class="sizes">
            <button>XS</button>
            <button>S</button>
            <button>M</button>
            <button>L</button>
            <button>XL</button>
            <button>XXL</button>
        </div>
    </div>
    <div class="product-color">
        <h3>Color</h3>
        <div class="product-colors">
            <button class="red"></button>
            <button class="ligt-blue"></button>
            <button class="beige"></button>
            <button class="dark-blue"></button>
            <button class="black"></button>
        </div>
    </div>
    <p class="filter-price">Price</p>
    <div class="range_container">
        <div class="sliders_control">
            <input id="fromSlider" type="range" value="10" min="0" max="500" />
            <input id="toSlider" type="range" value="30" min="0" max="500" />
        </div>
        <div class="form_control">
            <div class="form_control_container">
                <div class="form_control_container__time">$</div>
                <input class="form_control_container__time__input" type="number" id="fromInput" value="10" min="0" max="500" />
            </div>
            <div class="form_control_container">
                <div class="form_control_container__time">$</div>
                <input class="form_control_container__time__input" type="number" id="toInput" value="30" min="0" max="500" />
            </div>
        </div>
    </div>

    <div class="tick-button-categories">
        <label class="form-control">
            <input type="checkbox" name="checkbox1" />
            <p class="green-checkbox">SALE</p>
        </label>

        <label class="form-control">
            <input type="checkbox" name="checkbox2" />
            <p class="yellow-checkbox">NEW</p>
        </label>

        <label class="form-control">
            <input type="checkbox" name="checkbox3" />
            <p class="purple-checkbox">TOP</p>
        </label>
    </div>

    <div class="tag-section">
        <p>Tags</p>
        <button class="tag-button">KIDS</button>
        <button class="tag-button">SPORT</button>
        <button class="tag-button">DRESS</button>
        <button class="tag-button">PANTS</button>
        <button class="tag-button">T-SHIRT</button>
        <button class="tag-button">HAT</button>
        <button class="tag-button">UNISEX</button>
        <button class="tag-button">BAG</button>
        <button class="tag-button">ACCESSORIES</button>
        <button class="tag-button">SHOES</button>
        <button class="tag-button">POLO</button>
    </div>

    <div class="review-button container">
        <button class="black-button">APPLY FILTERS</button>
    </div>

    <script>
        function controlFromInput(fromSlider, fromInput, toInput, controlSlider) {
            const [from, to] = getParsed(fromInput, toInput);
            fillSlider(fromInput, toInput, '#C6C6C6', '#25daa5', controlSlider);
            if (from > to) {
                fromSlider.value = to;
                fromInput.value = to;
            } else {
                fromSlider.value = from;
            }
        }

        function controlToInput(toSlider, fromInput, toInput, controlSlider) {
            const [from, to] = getParsed(fromInput, toInput);
            fillSlider(fromInput, toInput, '#C6C6C6', '#25daa5', controlSlider);
            setToggleAccessible(toInput);
            if (from <= to) {
                toSlider.value = to;
                toInput.value = to;
            } else {
                toInput.value = from;
            }
        }

        function controlFromSlider(fromSlider, toSlider, fromInput) {
            const [from, to] = getParsed(fromSlider, toSlider);
            fillSlider(fromSlider, toSlider, '#C6C6C6', '#25daa5', toSlider);
            if (from > to) {
                fromSlider.value = to;
                fromInput.value = to;
            } else {
                fromInput.value = from;
            }
        }

        function controlToSlider(fromSlider, toSlider, toInput) {
            const [from, to] = getParsed(fromSlider, toSlider);
            fillSlider(fromSlider, toSlider, '#C6C6C6', '#25daa5', toSlider);
            setToggleAccessible(toSlider);
            if (from <= to) {
                toSlider.value = to;
                toInput.value = to;
            } else {
                toInput.value = from;
                toSlider.value = from;
            }
        }

        function getParsed(currentFrom, currentTo) {
            const from = parseInt(currentFrom.value, 10);
            const to = parseInt(currentTo.value, 10);
            return [from, to];
        }

        function fillSlider(from, to, sliderColor, rangeColor, controlSlider) {
            const rangeDistance = to.max - to.min;
            const fromPosition = from.value - to.min;
            const toPosition = to.value - to.min;
            controlSlider.style.background = `linear-gradient(
              to right,
              ${sliderColor} 0%,
              ${sliderColor} ${(fromPosition) / (rangeDistance) * 100}%,
              ${rangeColor} ${((fromPosition) / (rangeDistance)) * 100}%,
              ${rangeColor} ${(toPosition) / (rangeDistance) * 100}%,
              ${sliderColor} ${(toPosition) / (rangeDistance) * 100}%,
              ${sliderColor} 100%)`;
        }

        function setToggleAccessible(currentTarget) {
            const toSlider = document.querySelector('#toSlider');
            if (Number(currentTarget.value) <= 0) {
                toSlider.style.zIndex = 2;
            } else {
                toSlider.style.zIndex = 0;
            }
        }

        const fromSlider = document.querySelector('#fromSlider');
        const toSlider = document.querySelector('#toSlider');
        const fromInput = document.querySelector('#fromInput');
        const toInput = document.querySelector('#toInput');
        fillSlider(fromSlider, toSlider, '#C6C6C6', '#25daa5', toSlider);
        setToggleAccessible(toSlider);

        fromSlider.oninput = () => controlFromSlider(fromSlider, toSlider, fromInput);
        toSlider.oninput = () => controlToSlider(fromSlider, toSlider, toInput);
        fromInput.oninput = () => controlFromInput(fromSlider, fromInput, toInput, toSlider);
        toInput.oninput = () => controlToInput(toSlider, fromInput, toInput, toSlider);
    </script>
</section>


